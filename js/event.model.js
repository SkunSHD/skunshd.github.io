(function(window) {	'use strict';		/**	* @description	*  This class doing all that concerns a single event.	*/	function Model(storage) {		this.storage = storage;	}		Model.prototype.save = function (eventObj) {		// есть ли подходящий ключ в LS для этого события и если нет то создать ключ и массив для него с нужным кол-вом дней		var lsId = new Date(eventObj.date);		lsId.setDate(1);		lsId.setHours(0, 0, 0, 0);		lsId = lsId.getTime();				var jsonObj = '';		var oldMonthArr = this.storage.getData(lsId) || false;				if (oldMonthArr) {			oldMonthArr = JSON.parse(oldMonthArr);			oldMonthArr[eventObj.date.getDate()-1] = eventObj;						jsonObj = JSON.stringify(newMonthArr);		} else {			var daysInMonth = this.monthCapacity(eventObj);			var newMonthArr = new Array(daysInMonth);			newMonthArr[eventObj.date.getDate()-1] = eventObj;			jsonObj = JSON.stringify(newMonthArr);		}				this.storage.setData(lsId, jsonObj);	};	Model.prototype.monthCapacity = function (dateObj) {		var dateObj = dateObj || new Date();		var result = new Date(dateObj.date.getFullYear(), dateObj.date.getMonth() + 1, 0);		return result.getDate();	}    Model.prototype.validate = function (attrs) {        //validate properties		//alert(this.storage.setData);    };	Model.prototype.getbyKey = function (key) {		return this.storage.getData(key);	};		Model.prototype.getAll = function () {		return this.storage.getAllData();	}		Model.prototype.remove = function (key) {		this.storage.deleteByKey(key);	};		Model.prototype.deleteAll = function () {		this.storage.deleteAll();	};		window.app = window.app || {};	window.app.Model = Model;	})(window);